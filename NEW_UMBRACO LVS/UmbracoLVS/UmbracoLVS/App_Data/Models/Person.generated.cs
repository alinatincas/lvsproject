//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1158 with alias "person"
	/// <summary>person</summary>
	public partial interface IPerson : IPublishedContent
	{
		/// <summary>Email</summary>
		string PersonEmail { get; }

		/// <summary>Name</summary>
		string PersonName { get; }

		/// <summary>Phone</summary>
		string PersonPhone { get; }
	}

	/// <summary>person</summary>
	[PublishedContentModel("person")]
	public partial class Person : PublishedContentModel, IPerson
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "person";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Person(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Person, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Email
		///</summary>
		[ImplementPropertyType("personEmail")]
		public string PersonEmail
		{
			get { return GetPersonEmail(this); }
		}

		/// <summary>Static getter for Email</summary>
		public static string GetPersonEmail(IPerson that) { return that.GetPropertyValue<string>("personEmail"); }

		///<summary>
		/// Name
		///</summary>
		[ImplementPropertyType("personName")]
		public string PersonName
		{
			get { return GetPersonName(this); }
		}

		/// <summary>Static getter for Name</summary>
		public static string GetPersonName(IPerson that) { return that.GetPropertyValue<string>("personName"); }

		///<summary>
		/// Phone
		///</summary>
		[ImplementPropertyType("personPhone")]
		public string PersonPhone
		{
			get { return GetPersonPhone(this); }
		}

		/// <summary>Static getter for Phone</summary>
		public static string GetPersonPhone(IPerson that) { return that.GetPropertyValue<string>("personPhone"); }
	}
}
